-- criar banco de dados 
create database db_generation_game_online;

-- acessar o banco de dados
use db_generation_game_oline;

-- criar tabela 
create table tb_classe(
id bigint (5) auto_increment,
ataque int not null,
defesa int not null,
primary key(id)
);
-- inserir dados na tabela 
insert tb_classe (ataque,defesa) values (3000,1000);
insert tb_classe (ataque,defesa) values (4000,500);
insert tb_classe (ataque,defesa) values (1000,4000);
insert tb_classe (ataque,defesa) values (500,6000);
insert tb_classe (ataque,defesa) values (2000,2500);

-- busca
select * from tb_classe;

-- criar tabela 
create table tb_personagem(
id bigint(5) auto_increment,
nome varchar(255) not null,
velocidade int not null,
tamanho int not null,
agilidade int not null,
classe_id bigint,
primary key(id),
 foreign key (classe_id) references tb_classe (id)
);
-- inserir dados na tabela 
insert tb_classe (nome,velocidade,tamanho,agilidade) values ("yfa ",8 ,3 ,5 );
insert tb_classe (nome,velocidade,tamanho,agilidade) values (" catarina",10 ,2 ,8 );
insert tb_classe (nome,velocidade,tamanho,agilidade) values ("fabb ", 5,10 ,4 );
insert tb_classe (nome,velocidade,tamanho,agilidade) values ("catt ", 4, 2,6 );
insert tb_classe (nome,velocidade,tamanho,agilidade) values ("metar ",5 , 2, 7);
insert tb_classe (nome,velocidade,tamanho,agilidade) values ("darfne ",10 ,10 ,10 );
insert tb_classe (nome,velocidade,tamanho,agilidade) values ("isa ",1 ,1 ,1 );
insert tb_classe (nome,velocidade,tamanho,agilidade) values (" dos",7 ,9 ,8 );

-- busca
select * from tb_personagem;

-- select que retorne os funcionÃ¡rios com o poder de ataque maior do que 2000.
select * from tb_classe where ataque > 2000;

-- FaÃ§a um select trazendo os funcionÃ¡rios com poder de defesa entre 1000 e 2000.
select * from tb_classe where defesa > 1000 & defesa <2000;

select * from tb_personagem where nome Like "%c%";

select * from tb_classe
-- inner join
inner join tb_classe on tb_classe.id= tb_personagem.nome_id; 